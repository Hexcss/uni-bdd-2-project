---
import type { ICategory } from "../../utils/interfaces";
import GalleryCard from "../../components/cards/GalleryCard.astro";
import "../../assets/scss/styles.scss";
import Layout from "../../layouts/Layout.astro";

export const prerender = true;

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const bearerToken = import.meta.env.PUBLIC_AUTH_TOKEN;
  let categories: ICategory[] = [];

  const categoryResponse = await fetch(
    `${import.meta.env.PUBLIC_CRUD_API_URL}/categories`,
    {
      method: "GET",
      headers: {
        Authorization: `Bearer ${bearerToken}`,
      },
    }
  );

  if (categoryResponse.ok) {
    const categoriesData = await categoryResponse.json();
    categories = categoriesData.data;
  } else {
    console.error("Failed to fetch category:", categoryResponse.statusText);
  }

  return paginate(categories, { pageSize: 9 });
}

interface Props {
  page: any;
}

const { page } = Astro.props as Props;
---

<Layout title="Cooking Website">
  <main class="gallery" id="Gallery">
    <h1 style="margin-top: 50px;">Our<span>Categories</span></h1>

    <div class="gallery_image_box">
      {
        page.data.map((category: ICategory) => (
          <GalleryCard
            id={category.id}
            title={category.name}
            description={category.description!}
          />
        ))
      }
    </div>

    <div class="pagination">
      {
        page.url.prev ? (
          <a href={page.url.prev} class="prev">
            Previous
          </a>
        ) : (
          <span class="prev disabled">Previous</span>
        )
      }
      {
        page.url.next ? (
          <a href={page.url.next} class="next">
            Next
          </a>
        ) : (
          <span class="next disabled">Next</span>
        )
      }
    </div>
  </main>
</Layout>
